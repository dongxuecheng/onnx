# #############################################################################
# ## Docker Ignore File - 通用模板
# ##
# ## 这个文件的作用是在'docker build'开始时，从构建上下文中排除文件和目录。
# ## 它的语法和 .gitignore 几乎完全一样。
# ## 排除文件可以：
# ## 1. 加快构建速度（减少数据传输）
# ## 2. 避免不必要地破坏构建缓存
# ## 3. 防止将敏感文件和密钥泄露到镜像中
# #############################################################################

rtsp_results/
recordings/

# 忽略版本控制工具的目录和文件
.git
.gitignore
.gitattributes

# 忽略 Docker 相关的文件本身
# Dockerfile, docker-compose.yml 等是用来定义构建和运行流程的，
# 通常不需要被 COPY 到镜像内部。
Dockerfile
docker-compose.yml
docker-compose.*.yml
.dockerignore

# 忽略常见的项目文档和配置文件
README.md
LICENSE
.project
.settings

# #############################################################################
# ## 编程语言和框架相关
# ## 根据你的技术栈取消注释或添加
# #############################################################################

# --- Python ---
# 虚拟环境目录
.venv
venv
env
.env

# Python 缓存文件和字节码
__pycache__/
*.pyc
*.pyo
*.pyd

# Python 打包和安装目录
*.egg-info/
*.egg
dist/
build/
wheels/

# Python 测试和代码覆盖率工具
.pytest_cache/
.tox/
.coverage
.coverage.*
htmlcov/

# --- Node.js ---
# 依赖目录 (这是最重要的一个，它非常大)
node_modules/
npm-debug.log*
yarn-error.log

# 构建产物目录
dist/
build/
.next/

# --- Java (Maven/Gradle) ---
# 构建产物目录
target/
build/
*.jar
*.war

# #############################################################################
# ## 操作系统和 IDE/编辑器相关的配置文件
# #############################################################################

# --- macOS ---
.DS_Store
.AppleDouble
.LSOverride

# --- Windows ---
Thumbs.db
ehthumbs.db
Desktop.ini

# --- JetBrains IDEs (IntelliJ, PyCharm, etc.) ---
.idea/

# --- VS Code ---
.vscode/

# --- Sublime Text ---
*.sublime-project
*.sublime-workspace


# #############################################################################
# ## 日志、临时文件和上传文件
# #############################################################################
*.log
logs/
tmp/
uploads/


# #############################################################################
# ## 敏感信息 - 极其重要！
# ## 确保任何包含密钥、密码、证书的文件都被忽略
# #############################################################################
.env
.env.*
!/.env.example  # 如果你想保留一个示例文件，可以使用 ! 语法

# 常见的密钥和配置文件
credentials.*
config.json
secrets/
*.pem
*.key

# 云服务商凭证目录
.aws/
.gcp/